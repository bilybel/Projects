% doublepenanimate.m   % USING SET  and DRAWNOW%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%animation of pendulum%This uses the output of doublependdriver.mfigure()clfmoviescaling=1;n=length(t); dur=t(end);delay =floor(moviescaling*1000*dur/n); %delay per frame in .001 secs bar1ref = [0 1;0 0];bar2ref = [0 1;0 0];bar3ref = [0 1;0 0];axis('equal')% axis([-2 2 -2 2])sumL = sum(p.L);axis([-sumL sumL -sumL sumL])bar1pic=line('xdata',bar1ref(1,:),'ydata',bar1ref(2,:), ...              'linewidth', 3, 'erase','xor','color','green');bar2pic=line('xdata',bar2ref(1,:),'ydata',bar1ref(2,:), ...              'linewidth', 3, 'erase','xor','color','red');bar3pic=line('xdata',bar3ref(1,:),'ydata',bar2ref(2,:), ...              'linewidth', 3, 'erase','xor','color','blue');hinge=line('xdata',0,'ydata',0, 'marker','.','markersize',[30], ...           'color','black','erase', 'xor');drawnowfor i=1:n   pause(.01)	      th1=z(i,1);   th2=z(i,2);  th3=z(i,3);   R1=[cos(th1) -sin(th1)	; sin(th1) cos(th1)]; % one rotation matrix   R2=[cos(th2) -sin(th2)	; sin(th2) cos(th2)]; % another rotation matrix   R3=[cos(th3) -sin(th3)	; sin(th3) cos(th3)];      bar1=R1*bar1ref;   bar2=R2*bar2ref; bar2offset=bar1(:,2);   bar3=R3*bar3ref; bar3offset=bar2offset+bar2(:,2);   set(bar1pic,'xdata',bar1(2,:),'ydata',-bar1(1,:));   set(bar2pic,'xdata',bar2(2,:)+bar2offset(2), ...               'ydata',-(bar2(1,:)+bar2offset(1)));   set(bar3pic,'xdata',bar3(2,:)+bar3offset(2), ...               'ydata',-(bar3(1,:)+bar3offset(1)));           end%%% figure()% hold on% for i=1:n%    th1=z(i,1);   th2=z(i,3);%    R1=[cos(th1) -sin(th1)	; sin(th1) cos(th1)]; % one rotation matrix%    R2=[cos(th2) -sin(th2)	; sin(th2) cos(th2)]; % another rotation matrix%    %    bar1=R1*bar1ref;%    bar2=R2*bar2ref; bar2offset=bar1(:,2);% %    scatter(bar1(2,:),-bar1(1,:), '.b');% %    scatter(bar2(2,:)+bar2offset(2), -(bar2(1,:)+bar2offset(1)), '.r');%            % end           